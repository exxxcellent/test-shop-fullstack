// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  role      UserRole  @default(USER)
  isLogin   Boolean   @default(false)
  loginLink String
  balance   Int       @default(0)
  tokens    Token[]
  order     Order[]
  Balance   Balance[]
  createdAt DateTime  @default(now())
}

model Token {
  id           String @id @default(uuid())
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  refreshToken String
}

enum UserRole {
  USER
  ADMIN
}

model Item {
  id          String   @id @default(uuid())
  title       String
  description String?
  price       Int
  amount      Int      @default(0)
  order       Order[]
  imageUrl    String?
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  createdAt   DateTime @default(now())
}

model Category {
  id            String     @id @default(uuid())
  title         String     @unique
  parentId      String?
  popularity    Int        @default(0)
  parent        Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  subcategories Category[] @relation("CategoryToCategory")
  item          Item[]
  createdAt     DateTime   @default(now())
}

model Order {
  id           String       @id @default(uuid())
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  item         Item         @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId       String
  deliveryType DeliveryType @default(AUTO)
  status       OrderStatus  @default(CREATED)
  sum          Int          @default(0)
  address      String
  message      String?
  createdAt    DateTime     @default(now())
}

enum DeliveryType {
  AUTO
  HAND
}

enum OrderStatus {
  CREATED
  PAID
  DELIVERY
  COMPLETED
  CANCELED
}

model Balance {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  sum           Int
  status        BalanceStatus
  paymentMethod PaymentMethod
  createdAt     DateTime      @default(now())
}

enum BalanceStatus {
  REFILL
  PAID
  RETURN
}

enum PaymentMethod {
  SBP
  YANDEX_PAY
  VISA
  OTHER
}
