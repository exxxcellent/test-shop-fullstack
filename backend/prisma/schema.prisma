// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  password       String
  createdAt      DateTime @default(now())
  role           UserRole @default(USER)
  isActivated    Boolean  @default(false)
  activationLink String
  balance        Int      @default(0)
  tokens         Token[]
  Order          Order[]
}

model Token {
  id           String @id @default(uuid())
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  refreshToken String
}

enum UserRole {
  USER
  ADMIN
}

model Item {
  id          String   @id @default(uuid())
  title       String
  description String?
  price       Int
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Restrict)
  categoryId  String
  amount      Int      @default(0)
  Order       Order[]
  imageUrl    String?
}

model Category {
  id         String @id @default(uuid())
  title      String @unique
  popularity Int    @default(0)
  item       Item[]
}

model Order {
  id           String       @id @default(uuid())
  user         User         @relation(fields: [userId], references: [id])
  userId       String
  item         Item         @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId       String
  deliveryType DeliveryType @default(AUTO)
  status       OrderStatus  @default(CREATED)
}

enum DeliveryType {
  AUTO
  HAND
}

enum OrderStatus {
  CREATED
  PAID
  DELIVERY
  COMPLETED
  CANCELED
}
